# Prosjekt i Robot host 2015

from Tkinter import Tk, Button, W, Entry, Label, Canvas
import threading, cv2, time, sys
from PIL import Image, ImageTk

# TODO Se hvilke variabler som bor deklarerer tidligere

class HovedMeny():

    def __init__(self,hovedVindu):
        # init fungerer som en "constructor".
        self.master = hovedVindu

    def Knapper(self):
        # Genererer alle knappene til hovedvinduet.
        self.NAOipLabel = Label(self.master, text="NAO IP adresse")
        self.NAOipLabel.config(height = 4, width=20)
        self.NAOipLabel.grid(row=1, column=1, padx=2, pady=10, sticky=W)

        self.NAOipTekst = Entry(self.master)
        self.NAOipTekst.config(width=15)
        self.NAOipTekst.grid(row=1, column=2, padx=2, pady=10, sticky=W)

        self.NAOPortLabel = Label(self.master, text="NAO Port nummer")
        self.NAOPortLabel.config(height = 4, width=20)
        self.NAOPortLabel.grid(row=1, column=3, padx=2, pady=10, sticky=W)

        self.NAOPortTekst = Entry(self.master)
        self.NAOPortTekst.config(width=8)
        self.NAOPortTekst.grid(row=1, column=4, padx=2, pady=10, sticky=W)

        self.NAOipTilkobling = Button(self.master, text="Koble til Nao robot", bg = "grey", command = self.IPInput)
        self.NAOipTilkobling.config(width=20)
        self.NAOipTilkobling.grid(row=1, column=5, padx=20, pady=10, sticky=W)

        self.StartStoppVideo = Button(self.master, text="Start Video", bg = "grey", command = self.startStoppToggle)
        self.StartStoppVideo.config(height = 4, width=20)
        self.StartStoppVideo.grid(row=2, column=1, padx=2, pady=10, sticky=W)

        self.test2_button = Button(self.master, text="Bibliotek", bg = "grey")
        self.test2_button.config(height = 4, width=20)
        self.test2_button.grid(row=3, column=1, padx=2, pady=10, sticky=W)

        self.Avslutt = Button(self.master, text="Avslutt", bg = "grey", command = self.avslutteProgram)
        self.Avslutt.config(height = 4, width=20)
        self.Avslutt.grid(row=4, column=1, padx=2, pady=10, sticky=W)


    def VideoLayout(self):
        # Lager tomme vinduer for video
        self.originalVideo = Canvas(self.master, width=640, height = 480, bg="white")
        self.originalVideo.grid(row=2, column=2,padx=2, pady=25, rowspan = 5, columnspan = 5, sticky=W)

        self.segmentertVideo = Canvas(self.master, width=640, height = 480, bg="white")
        self.segmentertVideo.grid(row=2, column=8, padx=2, pady=25, rowspan = 5, columnspan = 5, sticky=W)


    def startStoppToggle(self):
        # Toggleknapp for start og stopp av video. Starter threading for innlasting av video
        if self.StartStoppVideo.config('text')[-1] == "Start Video":
            self.StartStoppVideo.config(text="Stopp Video")
            self.lastInnVideo = False
            self.t1 = threading.Thread(target=self.VisOriginalVideo)
            self.t1.start()
        else:
            self.StartStoppVideo.config(text="Start Video")
            self.lastInnVideo = True


    def avslutteProgram(self):
        # Avslutter eventuell traad for videoimport.
        self.lastInnVideo = True
        sys.exit()


    def IPInput(self):
        # Toggle tilkoblingsknapp, laaser IP og PORT felt. Lagrer IP og PORT nummer
        if self.NAOipTilkobling.config('text')[-1] == "Koble til Nao robot":
            self.NAOipTilkobling.config(text="Nao robot tilkoblet")
            self.NAOPortTekst.config(state="disabled")
            self.NAOipTekst.config(state="disabled")

        else:
            self.NAOipTilkobling.config(text="Koble til Nao robot")
            self.NAOPortTekst.config(state="normal")
            self.NAOipTekst.config(state="normal")

        NAOip =  self.NAOipTekst.get()
        NAOport = self.NAOPortTekst.get()

        print(NAOip) #testkode
        print(NAOport) #testkode


    def VisOriginalVideo(self):
        # Traad for innlasting av bilde
        self.opptak = cv2.VideoCapture(0)
        self.HOGde = cv2.HOGDescriptor()

        while(self.lastInnVideo == False):
            ret, frame = self.opptak.read()
            
            # Gaar inn i lokke dersom man har avlest bilde fra kameraobjektet
            if ret == True:
                bildePre = Image.fromarray(frame)
                bilde = ImageTk.PhotoImage(bildePre)
                self.originalVideo.create_image(322,242,image=bilde)    # Merk at posisjon er relativ til hovedvinduet.
                testavBilde = self.HOGdeskriptor(frame)
                time.sleep(0.5)
                
        self.opptak.release()
        cv2.destroyAllWindows()


    def HOGdeskriptor(self, bilde):
        # HOG deskriptor for aa finne bilde features.

        descriptors = self.HOGde.compute(bilde, winStride=(64,128), padding=(0, 0))
        print descriptors.shape   # Testkode

        return descriptors



# Oppretter hovedvinduet
root = Tk()
root.geometry("1500x700")
root.title("Prosjekt i Robot")

# Oppretter en instans av HovedMeny
program = HovedMeny(root)
program.Knapper()
program.VideoLayout()

# Starter event handling
root.mainloop()




